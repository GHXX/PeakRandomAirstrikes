<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net471</TargetFramework>
	
	<AssemblyTitle>RandomAirstrikes</AssemblyTitle>
    <AssemblyName>RandomAirstrikes</AssemblyName>
    <Version>1.0.9</Version>
	
    <Product>RandomAirstrikes</Product>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <LangVersion>latest</LangVersion>
    <RestoreAdditionalProjectSources>
      https://api.nuget.org/v3/index.json;
      https://nuget.bepinex.dev/v3/index.json;
      https://nuget.samboy.dev/v3/index.json
    </RestoreAdditionalProjectSources>
    <RootNamespace>RandomAirstrikes</RootNamespace>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="BepInEx.Analyzers" Version="1.*" PrivateAssets="all" />
    <PackageReference Include="BepInEx.AssemblyPublicizer.MSBuild" Version="0.4.3" PrivateAssets="all" />
    <PackageReference Include="BepInEx.Core" Version="5.*" />
    <PackageReference Include="BepInEx.PluginInfoProps" Version="2.*" />
    <PackageReference Include="Hamunii.BepInEx.AutoPlugin" Version="2.0.*" PrivateAssets="all" />
  </ItemGroup>
  
  <ItemGroup Condition="'$(TargetFramework.TrimEnd(`0123456789`))' == 'net'">
    <PackageReference Include="Microsoft.NETFramework.ReferenceAssemblies" Version="1.0.2" PrivateAssets="all" />
  </ItemGroup>
  
  <ItemGroup Condition="Exists('$(ManagedDir)')">
    <LocalReferences Include="$(ManagedDir)*.dll" Exclude="$(ManagedDir)Mono*.dll;$(ManagedDir)netstandard.dll;$(ManagedDir)System*.dll;$(ManagedDir)mscorlib.dll" />
    <Reference Include="@(LocalReferences)" Private="false" />
    <Reference Include="$(ManagedDir)Assembly-CSharp.dll" Private="false" Publicize="true" />
  </ItemGroup>
    <Target Name="PackTS" DependsOnTargets="Build" Condition="$(ThunderstorePackable) != 'false'">
    <Error Text=" PackTS must be called with Release configuration." Condition="'$(Configuration)' != 'Release'" />
    <PropertyGroup>
      <BuildArgument Condition="'$(PublishTS)' != 'true'">build</BuildArgument>
      <BuildArgument Condition="'$(PublishTS)' == 'true'">publish</BuildArgument>
    </PropertyGroup>
    <!--<Exec Command="dotnet tool restore" />-->
    <Exec Command="tcli $(BuildArgument) --package-version $(Version) --token $(TS_AUTH)" />
  </Target>
  
  <Import Project="Config.Build.user.props" />
  <ItemGroup>
    <None Include="../README.md" Pack="true" PackagePath="/" />
    <None Include="assets/icon.png" Pack="true" PackagePath="/" />
  </ItemGroup>
</Project>
